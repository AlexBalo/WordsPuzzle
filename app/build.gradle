apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def config = project.ext

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId config.packageName
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:${config.kotlinVersion}"

    // Android
    implementation "com.android.support:appcompat-v7:${config.supportLibraryVersion}"
    implementation "com.android.support:design:${config.supportLibraryVersion}"

    // Dagger
    implementation "com.google.dagger:dagger:${config.daggerVersion}"
    implementation "com.google.dagger:dagger-android:${config.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${config.daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${config.daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${config.daggerVersion}"
    compileOnly "org.glassfish:javax.annotation:${glassfishAnnotationVersion}"

    // Network
    implementation "com.google.code.gson:gson:${config.gsonVersion}"
    implementation "com.squareup.okhttp3:okhttp:${config.okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${config.okhttpVersion}"
    implementation "com.squareup.retrofit2:retrofit:${config.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${config.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${config.rxJava2Adapter}"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:${config.rxJavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${config.rxAndroidVersion}"
    implementation "nl.littlerobots.rxlint:rxlint:${config.rxLintVersion}"

    // ButterKnife
    implementation "com.jakewharton:butterknife:${config.butterKnifeVersion}"
    kapt "com.jakewharton:butterknife-compiler:${config.butterKnifeVersion}"

    // Misc
    // Make it easier to remove intrinsic paddings of the stock material design horizontal progress bar
    implementation "me.zhanghai.android.materialprogressbar:library:${config.materialProgressVersion}"

    testImplementation "junit:junit:${config.junitVersion}"
    testImplementation "org.assertj:assertj-core:${config.assertjVersion}"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${config.kotlinVersion}"
    testImplementation "org.hamcrest:hamcrest-core:${config.hamcrestVersion}"
    testImplementation "org.hamcrest:hamcrest-library:${config.hamcrestVersion}"
    testImplementation "org.hamcrest:hamcrest-integration:${config.hamcrestVersion}"
    testImplementation "org.mockito:mockito-core:${config.mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${config.mockitoVersion}"
    testImplementation dependencies.create("com.nhaarman:mockito-kotlin:${config.mockitoKotlinVersion}") {
        exclude group: 'org.jetbrains.kotlin'
    }

    androidTestImplementation 'com.android.support.test:runner:1.0.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.0'
}
